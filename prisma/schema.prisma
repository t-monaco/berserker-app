generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Program {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  workouts  Workout[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@map("programs")
}

model Category {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Block     Block[]

  @@map("categories")
}

model Block {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  description String
  duration    String
  title       String
  categoryId  String   @db.ObjectId
  category    Category @relation(fields: [categoryId], references: [id])
  workoutId   String?  @db.ObjectId
  workout     Workout? @relation(fields: [workoutId], references: [id], onDelete: Cascade)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("blocks")
}

model Workout {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  blocks    Block[]
  date      String
  programId String   @db.ObjectId
  program   Program  @relation(fields: [programId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([date, programId], name: "workoutIdentifier")
  @@map("workouts")
}

enum Role {
  USER
  ADMIN
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  clerkId   String   @unique
  email     String   @unique
  username  String   @unique
  firstName String
  lastName  String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}
